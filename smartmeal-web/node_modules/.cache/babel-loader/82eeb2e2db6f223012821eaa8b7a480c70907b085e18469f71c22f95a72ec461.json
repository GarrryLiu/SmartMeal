{"ast":null,"code":"import { create } from 'zustand';\nimport apiService from '../services/api';\nexport const useAppStore = create((set, get) => ({\n  // Initial state\n  currentPlan: null,\n  currentAnalytics: null,\n  currentShoppingList: null,\n  userProfile: null,\n  isLoading: false,\n  error: null,\n  activeTab: 'home',\n  // Actions\n  generatePlanFromGoal: async goal => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await apiService.generatePlanFromGoal(goal);\n      set({\n        currentPlan: response.plan,\n        currentAnalytics: response.analytics,\n        currentShoppingList: response.shopping_list,\n        isLoading: false,\n        activeTab: 'mealplan'\n      });\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to generate meal plan',\n        isLoading: false\n      });\n    }\n  },\n  generateRecipesFromReceipt: async items => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const recipes = await apiService.generateRecipesFromReceipt(items);\n      set({\n        isLoading: false\n      });\n      return recipes;\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to generate recipes',\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  loadUserProfile: async () => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await apiService.getUserProfile();\n      set({\n        userProfile: response.profile,\n        isLoading: false\n      });\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to load user profile',\n        isLoading: false\n      });\n    }\n  },\n  setActiveTab: tab => {\n    set({\n      activeTab: tab\n    });\n  },\n  clearError: () => {\n    set({\n      error: null\n    });\n  }\n}));","map":{"version":3,"names":["create","apiService","useAppStore","set","get","currentPlan","currentAnalytics","currentShoppingList","userProfile","isLoading","error","activeTab","generatePlanFromGoal","goal","response","plan","analytics","shopping_list","Error","message","generateRecipesFromReceipt","items","recipes","loadUserProfile","getUserProfile","profile","setActiveTab","tab","clearError"],"sources":["/Users/garyliu/Desktop/SmartMeal/smartmeal-web/src/store/useAppStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { AppState, WeeklyPlan, Recipe, AnalyticsData, ShoppingList, UserProfile } from '../models';\nimport apiService from '../services/api';\n\nexport const useAppStore = create<AppState>((set, get) => ({\n  // Initial state\n  currentPlan: null,\n  currentAnalytics: null,\n  currentShoppingList: null,\n  userProfile: null,\n  isLoading: false,\n  error: null,\n  activeTab: 'home',\n\n  // Actions\n  generatePlanFromGoal: async (goal: string) => {\n    set({ isLoading: true, error: null });\n    try {\n      const response = await apiService.generatePlanFromGoal(goal);\n      set({\n        currentPlan: response.plan,\n        currentAnalytics: response.analytics,\n        currentShoppingList: response.shopping_list,\n        isLoading: false,\n        activeTab: 'mealplan'\n      });\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to generate meal plan',\n        isLoading: false\n      });\n    }\n  },\n\n  generateRecipesFromReceipt: async (items: string[]): Promise<Recipe[]> => {\n    set({ isLoading: true, error: null });\n    try {\n      const recipes = await apiService.generateRecipesFromReceipt(items);\n      set({ isLoading: false });\n      return recipes;\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to generate recipes',\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n\n  loadUserProfile: async () => {\n    set({ isLoading: true, error: null });\n    try {\n      const response = await apiService.getUserProfile();\n      set({\n        userProfile: response.profile,\n        isLoading: false\n      });\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to load user profile',\n        isLoading: false\n      });\n    }\n  },\n\n  setActiveTab: (tab: string) => {\n    set({ activeTab: tab });\n  },\n\n  clearError: () => {\n    set({ error: null });\n  },\n})); "],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,OAAOC,UAAU,MAAM,iBAAiB;AAExC,OAAO,MAAMC,WAAW,GAAGF,MAAM,CAAW,CAACG,GAAG,EAAEC,GAAG,MAAM;EACzD;EACAC,WAAW,EAAE,IAAI;EACjBC,gBAAgB,EAAE,IAAI;EACtBC,mBAAmB,EAAE,IAAI;EACzBC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,MAAM;EAEjB;EACAC,oBAAoB,EAAE,MAAOC,IAAY,IAAK;IAC5CV,GAAG,CAAC;MAAEM,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMb,UAAU,CAACW,oBAAoB,CAACC,IAAI,CAAC;MAC5DV,GAAG,CAAC;QACFE,WAAW,EAAES,QAAQ,CAACC,IAAI;QAC1BT,gBAAgB,EAAEQ,QAAQ,CAACE,SAAS;QACpCT,mBAAmB,EAAEO,QAAQ,CAACG,aAAa;QAC3CR,SAAS,EAAE,KAAK;QAChBE,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdP,GAAG,CAAC;QACFO,KAAK,EAAEA,KAAK,YAAYQ,KAAK,GAAGR,KAAK,CAACS,OAAO,GAAG,8BAA8B;QAC9EV,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EAEDW,0BAA0B,EAAE,MAAOC,KAAe,IAAwB;IACxElB,GAAG,CAAC;MAAEM,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAMY,OAAO,GAAG,MAAMrB,UAAU,CAACmB,0BAA0B,CAACC,KAAK,CAAC;MAClElB,GAAG,CAAC;QAAEM,SAAS,EAAE;MAAM,CAAC,CAAC;MACzB,OAAOa,OAAO;IAChB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdP,GAAG,CAAC;QACFO,KAAK,EAAEA,KAAK,YAAYQ,KAAK,GAAGR,KAAK,CAACS,OAAO,GAAG,4BAA4B;QAC5EV,SAAS,EAAE;MACb,CAAC,CAAC;MACF,MAAMC,KAAK;IACb;EACF,CAAC;EAEDa,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3BpB,GAAG,CAAC;MAAEM,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMb,UAAU,CAACuB,cAAc,CAAC,CAAC;MAClDrB,GAAG,CAAC;QACFK,WAAW,EAAEM,QAAQ,CAACW,OAAO;QAC7BhB,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,GAAG,CAAC;QACFO,KAAK,EAAEA,KAAK,YAAYQ,KAAK,GAAGR,KAAK,CAACS,OAAO,GAAG,6BAA6B;QAC7EV,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EAEDiB,YAAY,EAAGC,GAAW,IAAK;IAC7BxB,GAAG,CAAC;MAAEQ,SAAS,EAAEgB;IAAI,CAAC,CAAC;EACzB,CAAC;EAEDC,UAAU,EAAEA,CAAA,KAAM;IAChBzB,GAAG,CAAC;MAAEO,KAAK,EAAE;IAAK,CAAC,CAAC;EACtB;AACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}