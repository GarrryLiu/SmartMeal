{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log('API Response:', response.status, response.config.url);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, error.message);\n  return Promise.reject(error);\n});\nexport const apiService = {\n  // Path A: Generate recipes from receipt\n  generateRecipesFromReceipt: async items => {\n    try {\n      const response = await api.post('/recipes/from-receipt', {\n        items\n      });\n      return response.data.recipes;\n    } catch (error) {\n      console.error('Error generating recipes:', error);\n      throw error;\n    }\n  },\n  // Path B: Generate meal plan from goal\n  generatePlanFromGoal: async goal => {\n    try {\n      const response = await api.post('/plans/from-goal', {\n        goal\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error generating meal plan:', error);\n      throw error;\n    }\n  },\n  // User Profile\n  getUserProfile: async () => {\n    try {\n      const response = await api.get('/profile');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      throw error;\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","message","apiService","generateRecipesFromReceipt","items","post","data","recipes","generatePlanFromGoal","goal","getUserProfile","get"],"sources":["/Users/garyliu/Desktop/SmartMeal/smartmeal-web/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Recipe, PlanResponse, ProfileResponse } from '../models';\n\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log('API Request:', config.method?.toUpperCase(), config.url);\n    return config;\n  },\n  (error) => {\n    console.error('Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Response:', response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error('Response Error:', error.response?.status, error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const apiService = {\n  // Path A: Generate recipes from receipt\n  generateRecipesFromReceipt: async (items: string[]): Promise<Recipe[]> => {\n    try {\n      const response = await api.post('/recipes/from-receipt', { items });\n      return response.data.recipes;\n    } catch (error) {\n      console.error('Error generating recipes:', error);\n      throw error;\n    }\n  },\n\n  // Path B: Generate meal plan from goal\n  generatePlanFromGoal: async (goal: string): Promise<PlanResponse> => {\n    try {\n      const response = await api.post('/plans/from-goal', { goal });\n      return response.data;\n    } catch (error) {\n      console.error('Error generating meal plan:', error);\n      throw error;\n    }\n  },\n\n  // User Profile\n  getUserProfile: async (): Promise<ProfileResponse> => {\n    try {\n      const response = await api.get('/profile');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      throw error;\n    }\n  },\n};\n\nexport default apiService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,8BAA8B;AAEnD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAAF,cAAA,GAAED,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,EAAEL,MAAM,CAACM,GAAG,CAAC;EACrE,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEO,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACV,MAAM,CAACM,GAAG,CAAC;EAClE,OAAOI,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,eAAA;EACTV,OAAO,CAACK,KAAK,CAAC,iBAAiB,GAAAK,eAAA,GAAEL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBD,MAAM,EAAEJ,KAAK,CAACM,OAAO,CAAC;EACvE,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG;EACxB;EACAC,0BAA0B,EAAE,MAAOC,KAAe,IAAwB;IACxE,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMlB,GAAG,CAACyB,IAAI,CAAC,uBAAuB,EAAE;QAAED;MAAM,CAAC,CAAC;MACnE,OAAON,QAAQ,CAACQ,IAAI,CAACC,OAAO;IAC9B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAa,oBAAoB,EAAE,MAAOC,IAAY,IAA4B;IACnE,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMlB,GAAG,CAACyB,IAAI,CAAC,kBAAkB,EAAE;QAAEI;MAAK,CAAC,CAAC;MAC7D,OAAOX,QAAQ,CAACQ,IAAI;IACtB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAe,cAAc,EAAE,MAAAA,CAAA,KAAsC;IACpD,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMlB,GAAG,CAAC+B,GAAG,CAAC,UAAU,CAAC;MAC1C,OAAOb,QAAQ,CAACQ,IAAI;IACtB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeO,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}