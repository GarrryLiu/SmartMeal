{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:8000/api/v1';const api=axios.create({baseURL:API_BASE_URL,timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor\napi.interceptors.request.use(config=>{var _config$method;console.log('API Request:',(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),config.url);return config;},error=>{console.error('Request Error:',error);return Promise.reject(error);});// Response interceptor\napi.interceptors.response.use(response=>{console.log('API Response:',response.status,response.config.url);return response;},error=>{var _error$response;console.error('Response Error:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,error.message);return Promise.reject(error);});export const apiService={// Path A: Generate recipes from receipt\ngenerateRecipesFromReceipt:async items=>{try{const response=await api.post('/recipes/from-receipt',{items});return response.data.recipes;}catch(error){console.error('Error generating recipes:',error);throw error;}},// Path B: Generate meal plan from goal\ngeneratePlanFromGoal:async goal=>{try{const response=await api.post('/plans/from-goal',{goal});return response.data;}catch(error){console.error('Error generating meal plan:',error);throw error;}},// User Profile\ngetUserProfile:async()=>{try{const response=await api.get('/profile');return response.data;}catch(error){console.error('Error fetching user profile:',error);throw error;}}};export default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","message","apiService","generateRecipesFromReceipt","items","post","data","recipes","generatePlanFromGoal","goal","getUserProfile","get"],"sources":["/Users/garyliu/Desktop/SmartMeal/smartmeal-web/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Recipe, PlanResponse, ProfileResponse } from '../models';\n\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log('API Request:', config.method?.toUpperCase(), config.url);\n    return config;\n  },\n  (error) => {\n    console.error('Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Response:', response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error('Response Error:', error.response?.status, error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const apiService = {\n  // Path A: Generate recipes from receipt\n  generateRecipesFromReceipt: async (items: string[]): Promise<Recipe[]> => {\n    try {\n      const response = await api.post('/recipes/from-receipt', { items });\n      return response.data.recipes;\n    } catch (error) {\n      console.error('Error generating recipes:', error);\n      throw error;\n    }\n  },\n\n  // Path B: Generate meal plan from goal\n  generatePlanFromGoal: async (goal: string): Promise<PlanResponse> => {\n    try {\n      const response = await api.post('/plans/from-goal', { goal });\n      return response.data;\n    } catch (error) {\n      console.error('Error generating meal plan:', error);\n      throw error;\n    }\n  },\n\n  // User Profile\n  getUserProfile: async (): Promise<ProfileResponse> => {\n    try {\n      const response = await api.get('/profile');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      throw error;\n    }\n  },\n};\n\nexport default apiService; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,YAAY,CAAG,8BAA8B,CAEnD,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,KAAAC,cAAA,CACVC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAAF,cAAA,CAAED,MAAM,CAACI,MAAM,UAAAH,cAAA,iBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,CAAEL,MAAM,CAACM,GAAG,CAAC,CACrE,MAAO,CAAAN,MAAM,CACf,CAAC,CACAO,KAAK,EAAK,CACTL,OAAO,CAACK,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAf,GAAG,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,EAAK,CACZR,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEO,QAAQ,CAACC,MAAM,CAAED,QAAQ,CAACV,MAAM,CAACM,GAAG,CAAC,CAClE,MAAO,CAAAI,QAAQ,CACjB,CAAC,CACAH,KAAK,EAAK,KAAAK,eAAA,CACTV,OAAO,CAACK,KAAK,CAAC,iBAAiB,EAAAK,eAAA,CAAEL,KAAK,CAACG,QAAQ,UAAAE,eAAA,iBAAdA,eAAA,CAAgBD,MAAM,CAAEJ,KAAK,CAACM,OAAO,CAAC,CACvE,MAAO,CAAAL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,MAAM,CAAAO,UAAU,CAAG,CACxB;AACAC,0BAA0B,CAAE,KAAO,CAAAC,KAAe,EAAwB,CACxE,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAACyB,IAAI,CAAC,uBAAuB,CAAE,CAAED,KAAM,CAAC,CAAC,CACnE,MAAO,CAAAN,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAC9B,CAAE,MAAOZ,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAa,oBAAoB,CAAE,KAAO,CAAAC,IAAY,EAA4B,CACnE,GAAI,CACF,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAACyB,IAAI,CAAC,kBAAkB,CAAE,CAAEI,IAAK,CAAC,CAAC,CAC7D,MAAO,CAAAX,QAAQ,CAACQ,IAAI,CACtB,CAAE,MAAOX,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAe,cAAc,CAAE,KAAAA,CAAA,GAAsC,CACpD,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAAC+B,GAAG,CAAC,UAAU,CAAC,CAC1C,MAAO,CAAAb,QAAQ,CAACQ,IAAI,CACtB,CAAE,MAAOX,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED,cAAe,CAAAO,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}