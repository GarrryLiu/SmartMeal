{"ast":null,"code":"import{create}from'zustand';import apiService from'../services/api';export const useAppStore=create((set,get)=>({// Initial state\ncurrentPlan:null,currentAnalytics:null,currentShoppingList:null,userProfile:null,isLoading:false,error:null,activeTab:'home',// Actions\ngeneratePlanFromGoal:async goal=>{set({isLoading:true,error:null});try{const response=await apiService.generatePlanFromGoal(goal);set({currentPlan:response.plan,currentAnalytics:response.analytics,currentShoppingList:response.shopping_list,isLoading:false,activeTab:'mealplan'});}catch(error){set({error:error instanceof Error?error.message:'Failed to generate meal plan',isLoading:false});}},generateRecipesFromReceipt:async items=>{set({isLoading:true,error:null});try{const recipes=await apiService.generateRecipesFromReceipt(items);set({isLoading:false});return recipes;}catch(error){set({error:error instanceof Error?error.message:'Failed to generate recipes',isLoading:false});throw error;}},loadUserProfile:async()=>{set({isLoading:true,error:null});try{const response=await apiService.getUserProfile();set({userProfile:response.profile,isLoading:false});}catch(error){set({error:error instanceof Error?error.message:'Failed to load user profile',isLoading:false});}},setActiveTab:tab=>{set({activeTab:tab});},clearError:()=>{set({error:null});}}));","map":{"version":3,"names":["create","apiService","useAppStore","set","get","currentPlan","currentAnalytics","currentShoppingList","userProfile","isLoading","error","activeTab","generatePlanFromGoal","goal","response","plan","analytics","shopping_list","Error","message","generateRecipesFromReceipt","items","recipes","loadUserProfile","getUserProfile","profile","setActiveTab","tab","clearError"],"sources":["/Users/garyliu/Desktop/SmartMeal/smartmeal-web/src/store/useAppStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { AppState, WeeklyPlan, Recipe, AnalyticsData, ShoppingList, UserProfile } from '../models';\nimport apiService from '../services/api';\n\nexport const useAppStore = create<AppState>((set, get) => ({\n  // Initial state\n  currentPlan: null,\n  currentAnalytics: null,\n  currentShoppingList: null,\n  userProfile: null,\n  isLoading: false,\n  error: null,\n  activeTab: 'home',\n\n  // Actions\n  generatePlanFromGoal: async (goal: string) => {\n    set({ isLoading: true, error: null });\n    try {\n      const response = await apiService.generatePlanFromGoal(goal);\n      set({\n        currentPlan: response.plan,\n        currentAnalytics: response.analytics,\n        currentShoppingList: response.shopping_list,\n        isLoading: false,\n        activeTab: 'mealplan'\n      });\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to generate meal plan',\n        isLoading: false\n      });\n    }\n  },\n\n  generateRecipesFromReceipt: async (items: string[]): Promise<Recipe[]> => {\n    set({ isLoading: true, error: null });\n    try {\n      const recipes = await apiService.generateRecipesFromReceipt(items);\n      set({ isLoading: false });\n      return recipes;\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to generate recipes',\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n\n  loadUserProfile: async () => {\n    set({ isLoading: true, error: null });\n    try {\n      const response = await apiService.getUserProfile();\n      set({\n        userProfile: response.profile,\n        isLoading: false\n      });\n    } catch (error) {\n      set({\n        error: error instanceof Error ? error.message : 'Failed to load user profile',\n        isLoading: false\n      });\n    }\n  },\n\n  setActiveTab: (tab: string) => {\n    set({ activeTab: tab });\n  },\n\n  clearError: () => {\n    set({ error: null });\n  },\n})); "],"mappings":"AAAA,OAASA,MAAM,KAAQ,SAAS,CAEhC,MAAO,CAAAC,UAAU,KAAM,iBAAiB,CAExC,MAAO,MAAM,CAAAC,WAAW,CAAGF,MAAM,CAAW,CAACG,GAAG,CAAEC,GAAG,IAAM,CACzD;AACAC,WAAW,CAAE,IAAI,CACjBC,gBAAgB,CAAE,IAAI,CACtBC,mBAAmB,CAAE,IAAI,CACzBC,WAAW,CAAE,IAAI,CACjBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IAAI,CACXC,SAAS,CAAE,MAAM,CAEjB;AACAC,oBAAoB,CAAE,KAAO,CAAAC,IAAY,EAAK,CAC5CV,GAAG,CAAC,CAAEM,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CACrC,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAb,UAAU,CAACW,oBAAoB,CAACC,IAAI,CAAC,CAC5DV,GAAG,CAAC,CACFE,WAAW,CAAES,QAAQ,CAACC,IAAI,CAC1BT,gBAAgB,CAAEQ,QAAQ,CAACE,SAAS,CACpCT,mBAAmB,CAAEO,QAAQ,CAACG,aAAa,CAC3CR,SAAS,CAAE,KAAK,CAChBE,SAAS,CAAE,UACb,CAAC,CAAC,CACJ,CAAE,MAAOD,KAAK,CAAE,CACdP,GAAG,CAAC,CACFO,KAAK,CAAEA,KAAK,WAAY,CAAAQ,KAAK,CAAGR,KAAK,CAACS,OAAO,CAAG,8BAA8B,CAC9EV,SAAS,CAAE,KACb,CAAC,CAAC,CACJ,CACF,CAAC,CAEDW,0BAA0B,CAAE,KAAO,CAAAC,KAAe,EAAwB,CACxElB,GAAG,CAAC,CAAEM,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CACrC,GAAI,CACF,KAAM,CAAAY,OAAO,CAAG,KAAM,CAAArB,UAAU,CAACmB,0BAA0B,CAACC,KAAK,CAAC,CAClElB,GAAG,CAAC,CAAEM,SAAS,CAAE,KAAM,CAAC,CAAC,CACzB,MAAO,CAAAa,OAAO,CAChB,CAAE,MAAOZ,KAAK,CAAE,CACdP,GAAG,CAAC,CACFO,KAAK,CAAEA,KAAK,WAAY,CAAAQ,KAAK,CAAGR,KAAK,CAACS,OAAO,CAAG,4BAA4B,CAC5EV,SAAS,CAAE,KACb,CAAC,CAAC,CACF,KAAM,CAAAC,KAAK,CACb,CACF,CAAC,CAEDa,eAAe,CAAE,KAAAA,CAAA,GAAY,CAC3BpB,GAAG,CAAC,CAAEM,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CACrC,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAb,UAAU,CAACuB,cAAc,CAAC,CAAC,CAClDrB,GAAG,CAAC,CACFK,WAAW,CAAEM,QAAQ,CAACW,OAAO,CAC7BhB,SAAS,CAAE,KACb,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdP,GAAG,CAAC,CACFO,KAAK,CAAEA,KAAK,WAAY,CAAAQ,KAAK,CAAGR,KAAK,CAACS,OAAO,CAAG,6BAA6B,CAC7EV,SAAS,CAAE,KACb,CAAC,CAAC,CACJ,CACF,CAAC,CAEDiB,YAAY,CAAGC,GAAW,EAAK,CAC7BxB,GAAG,CAAC,CAAEQ,SAAS,CAAEgB,GAAI,CAAC,CAAC,CACzB,CAAC,CAEDC,UAAU,CAAEA,CAAA,GAAM,CAChBzB,GAAG,CAAC,CAAEO,KAAK,CAAE,IAAK,CAAC,CAAC,CACtB,CACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}